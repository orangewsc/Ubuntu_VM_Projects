// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test.proto

#include "test.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
constexpr Example1_EmbeddedMessage::Example1_EmbeddedMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : stringval_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , int32val_(0){}
struct Example1_EmbeddedMessageDefaultTypeInternal {
  constexpr Example1_EmbeddedMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Example1_EmbeddedMessageDefaultTypeInternal() {}
  union {
    Example1_EmbeddedMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Example1_EmbeddedMessageDefaultTypeInternal _Example1_EmbeddedMessage_default_instance_;
constexpr Example1::Example1(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : repeatedint32val_()
  , _repeatedint32val_cached_byte_size_(0)
  , repeatedstringval_()
  , stringval_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , bytesval_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , embeddedexample1_(nullptr){}
struct Example1DefaultTypeInternal {
  constexpr Example1DefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Example1DefaultTypeInternal() {}
  union {
    Example1 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Example1DefaultTypeInternal _Example1_default_instance_;
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_test_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_test_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_test_2eproto = nullptr;

const uint32_t TableStruct_test_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Example1_EmbeddedMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Example1_EmbeddedMessage, int32val_),
  PROTOBUF_FIELD_OFFSET(::Example1_EmbeddedMessage, stringval_),
  PROTOBUF_FIELD_OFFSET(::Example1, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::Example1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Example1, stringval_),
  PROTOBUF_FIELD_OFFSET(::Example1, bytesval_),
  PROTOBUF_FIELD_OFFSET(::Example1, embeddedexample1_),
  PROTOBUF_FIELD_OFFSET(::Example1, repeatedint32val_),
  PROTOBUF_FIELD_OFFSET(::Example1, repeatedstringval_),
  0,
  1,
  2,
  ~0u,
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::Example1_EmbeddedMessage)},
  { 8, 19, -1, sizeof(::Example1)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_Example1_EmbeddedMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_Example1_default_instance_),
};

const char descriptor_table_protodef_test_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\ntest.proto\"\220\002\n\010Example1\022\026\n\tstringVal\030\001"
  " \001(\tH\000\210\001\001\022\025\n\010bytesVal\030\002 \001(\014H\001\210\001\001\0228\n\020embe"
  "ddedExample1\030\003 \001(\0132\031.Example1.EmbeddedMe"
  "ssageH\002\210\001\001\022\030\n\020repeatedInt32Val\030\004 \003(\005\022\031\n\021"
  "repeatedStringVal\030\005 \003(\t\0326\n\017EmbeddedMessa"
  "ge\022\020\n\010int32Val\030\001 \001(\005\022\021\n\tstringVal\030\002 \001(\tB"
  "\014\n\n_stringValB\013\n\t_bytesValB\023\n\021_embeddedE"
  "xample1b\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_test_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_test_2eproto = {
  false, false, 295, descriptor_table_protodef_test_2eproto, "test.proto", 
  &descriptor_table_test_2eproto_once, nullptr, 0, 2,
  schemas, file_default_instances, TableStruct_test_2eproto::offsets,
  file_level_metadata_test_2eproto, file_level_enum_descriptors_test_2eproto, file_level_service_descriptors_test_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_test_2eproto_getter() {
  return &descriptor_table_test_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_test_2eproto(&descriptor_table_test_2eproto);

// ===================================================================

class Example1_EmbeddedMessage::_Internal {
 public:
};

Example1_EmbeddedMessage::Example1_EmbeddedMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Example1.EmbeddedMessage)
}
Example1_EmbeddedMessage::Example1_EmbeddedMessage(const Example1_EmbeddedMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  stringval_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    stringval_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_stringval().empty()) {
    stringval_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_stringval(), 
      GetArenaForAllocation());
  }
  int32val_ = from.int32val_;
  // @@protoc_insertion_point(copy_constructor:Example1.EmbeddedMessage)
}

inline void Example1_EmbeddedMessage::SharedCtor() {
stringval_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  stringval_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
int32val_ = 0;
}

Example1_EmbeddedMessage::~Example1_EmbeddedMessage() {
  // @@protoc_insertion_point(destructor:Example1.EmbeddedMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Example1_EmbeddedMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  stringval_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Example1_EmbeddedMessage::ArenaDtor(void* object) {
  Example1_EmbeddedMessage* _this = reinterpret_cast< Example1_EmbeddedMessage* >(object);
  (void)_this;
}
void Example1_EmbeddedMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Example1_EmbeddedMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Example1_EmbeddedMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:Example1.EmbeddedMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stringval_.ClearToEmpty();
  int32val_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Example1_EmbeddedMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 int32Val = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          int32val_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string stringVal = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_stringval();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Example1.EmbeddedMessage.stringVal"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Example1_EmbeddedMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Example1.EmbeddedMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 int32Val = 1;
  if (this->_internal_int32val() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_int32val(), target);
  }

  // string stringVal = 2;
  if (!this->_internal_stringval().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_stringval().data(), static_cast<int>(this->_internal_stringval().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Example1.EmbeddedMessage.stringVal");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_stringval(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Example1.EmbeddedMessage)
  return target;
}

size_t Example1_EmbeddedMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Example1.EmbeddedMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string stringVal = 2;
  if (!this->_internal_stringval().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_stringval());
  }

  // int32 int32Val = 1;
  if (this->_internal_int32val() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_int32val());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Example1_EmbeddedMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Example1_EmbeddedMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Example1_EmbeddedMessage::GetClassData() const { return &_class_data_; }

void Example1_EmbeddedMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Example1_EmbeddedMessage *>(to)->MergeFrom(
      static_cast<const Example1_EmbeddedMessage &>(from));
}


void Example1_EmbeddedMessage::MergeFrom(const Example1_EmbeddedMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Example1.EmbeddedMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_stringval().empty()) {
    _internal_set_stringval(from._internal_stringval());
  }
  if (from._internal_int32val() != 0) {
    _internal_set_int32val(from._internal_int32val());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Example1_EmbeddedMessage::CopyFrom(const Example1_EmbeddedMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Example1.EmbeddedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Example1_EmbeddedMessage::IsInitialized() const {
  return true;
}

void Example1_EmbeddedMessage::InternalSwap(Example1_EmbeddedMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &stringval_, lhs_arena,
      &other->stringval_, rhs_arena
  );
  swap(int32val_, other->int32val_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Example1_EmbeddedMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_test_2eproto_getter, &descriptor_table_test_2eproto_once,
      file_level_metadata_test_2eproto[0]);
}

// ===================================================================

class Example1::_Internal {
 public:
  using HasBits = decltype(std::declval<Example1>()._has_bits_);
  static void set_has_stringval(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_bytesval(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::Example1_EmbeddedMessage& embeddedexample1(const Example1* msg);
  static void set_has_embeddedexample1(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::Example1_EmbeddedMessage&
Example1::_Internal::embeddedexample1(const Example1* msg) {
  return *msg->embeddedexample1_;
}
Example1::Example1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  repeatedint32val_(arena),
  repeatedstringval_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Example1)
}
Example1::Example1(const Example1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      repeatedint32val_(from.repeatedint32val_),
      repeatedstringval_(from.repeatedstringval_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  stringval_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    stringval_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_stringval()) {
    stringval_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_stringval(), 
      GetArenaForAllocation());
  }
  bytesval_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    bytesval_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_bytesval()) {
    bytesval_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_bytesval(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_embeddedexample1()) {
    embeddedexample1_ = new ::Example1_EmbeddedMessage(*from.embeddedexample1_);
  } else {
    embeddedexample1_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Example1)
}

inline void Example1::SharedCtor() {
stringval_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  stringval_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
bytesval_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  bytesval_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
embeddedexample1_ = nullptr;
}

Example1::~Example1() {
  // @@protoc_insertion_point(destructor:Example1)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Example1::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  stringval_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  bytesval_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete embeddedexample1_;
}

void Example1::ArenaDtor(void* object) {
  Example1* _this = reinterpret_cast< Example1* >(object);
  (void)_this;
}
void Example1::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Example1::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Example1::Clear() {
// @@protoc_insertion_point(message_clear_start:Example1)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  repeatedint32val_.Clear();
  repeatedstringval_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      stringval_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      bytesval_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(embeddedexample1_ != nullptr);
      embeddedexample1_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Example1::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string stringVal = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_stringval();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Example1.stringVal"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bytes bytesVal = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_bytesval();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .Example1.EmbeddedMessage embeddedExample1 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_embeddedexample1(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 repeatedInt32Val = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_repeatedint32val(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 32) {
          _internal_add_repeatedint32val(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string repeatedStringVal = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_repeatedstringval();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Example1.repeatedStringVal"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Example1::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Example1)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional string stringVal = 1;
  if (_internal_has_stringval()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_stringval().data(), static_cast<int>(this->_internal_stringval().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Example1.stringVal");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_stringval(), target);
  }

  // optional bytes bytesVal = 2;
  if (_internal_has_bytesval()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_bytesval(), target);
  }

  // optional .Example1.EmbeddedMessage embeddedExample1 = 3;
  if (_internal_has_embeddedexample1()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::embeddedexample1(this), target, stream);
  }

  // repeated int32 repeatedInt32Val = 4;
  {
    int byte_size = _repeatedint32val_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          4, _internal_repeatedint32val(), byte_size, target);
    }
  }

  // repeated string repeatedStringVal = 5;
  for (int i = 0, n = this->_internal_repeatedstringval_size(); i < n; i++) {
    const auto& s = this->_internal_repeatedstringval(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Example1.repeatedStringVal");
    target = stream->WriteString(5, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Example1)
  return target;
}

size_t Example1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Example1)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 repeatedInt32Val = 4;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->repeatedint32val_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<int32_t>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _repeatedint32val_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated string repeatedStringVal = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(repeatedstringval_.size());
  for (int i = 0, n = repeatedstringval_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      repeatedstringval_.Get(i));
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string stringVal = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_stringval());
    }

    // optional bytes bytesVal = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_bytesval());
    }

    // optional .Example1.EmbeddedMessage embeddedExample1 = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *embeddedexample1_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Example1::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Example1::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Example1::GetClassData() const { return &_class_data_; }

void Example1::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Example1 *>(to)->MergeFrom(
      static_cast<const Example1 &>(from));
}


void Example1::MergeFrom(const Example1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Example1)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  repeatedint32val_.MergeFrom(from.repeatedint32val_);
  repeatedstringval_.MergeFrom(from.repeatedstringval_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_stringval(from._internal_stringval());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_bytesval(from._internal_bytesval());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_embeddedexample1()->::Example1_EmbeddedMessage::MergeFrom(from._internal_embeddedexample1());
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Example1::CopyFrom(const Example1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Example1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Example1::IsInitialized() const {
  return true;
}

void Example1::InternalSwap(Example1* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  repeatedint32val_.InternalSwap(&other->repeatedint32val_);
  repeatedstringval_.InternalSwap(&other->repeatedstringval_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &stringval_, lhs_arena,
      &other->stringval_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &bytesval_, lhs_arena,
      &other->bytesval_, rhs_arena
  );
  swap(embeddedexample1_, other->embeddedexample1_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Example1::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_test_2eproto_getter, &descriptor_table_test_2eproto_once,
      file_level_metadata_test_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Example1_EmbeddedMessage* Arena::CreateMaybeMessage< ::Example1_EmbeddedMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Example1_EmbeddedMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::Example1* Arena::CreateMaybeMessage< ::Example1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Example1 >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
